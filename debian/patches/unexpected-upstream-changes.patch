Description: Fixes build process
Author: Thomas Goirand <zigo@debian.org>
Forwarded: not-needed
--- xen-api-1.3.2.orig/scripts/examples/python/XenAPI.py
+++ xen-api-1.3.2/scripts/examples/python/XenAPI.py
@@ -86,6 +86,7 @@ class UDSHTTP(httplib.HTTP):
 
 class UDSTransport(xmlrpclib.Transport):
     def __init__(self, use_datetime=0):
+        xmlrpclib.Transport.__init__(self, use_datetime)
         self._use_datetime = use_datetime
         self._extra_headers=[]
     def add_extra_header(self, key, value):
@@ -189,7 +190,7 @@ class Session(xmlrpclib.ServerProxy):
             return xmlrpclib.ServerProxy.__getattr__(self, name)
 
 def xapi_local():
-    return Session("http://_var_xapi_xapi/", transport=UDSTransport())
+    return Session("http://_var_lib_xcp_xapi/", transport=UDSTransport())
 
 def _parse_result(result):
     if type(result) != dict or 'Status' not in result:
--- xen-api-1.3.2.orig/ocaml/idl/ocaml_backend/exnHelper.ml
+++ xen-api-1.3.2/ocaml/idl/ocaml_backend/exnHelper.ml
@@ -63,6 +63,8 @@ let error_of_exn e =
 		internal_error, [ Printf.sprintf "Subprocess exitted with unexpected code %d; stdout = [ %s ]; stderr = [ %s ]" n stdout stderr ]
 	| Invalid_argument x ->
 		internal_error, [ Printf.sprintf "Invalid argument: %s" x ]
+	| Db_filter.Expression_error (expr, exc) ->
+	  invalid_value, [ expr; (Printexc.to_string exc)]
 	| e ->
 		internal_error, [ Printexc.to_string e ]
 
--- xen-api-1.3.2.orig/ocaml/xe-cli/newcli.ml
+++ xen-api-1.3.2/ocaml/xe-cli/newcli.ml
@@ -499,12 +499,13 @@ let main_loop ifd ofd =
               (* Get the result header immediately *)
               match http_response_code resultline with
               | 200 ->
-	                (try
-		                 copy_with_heartbeat file_ch oc heartbeat_fun;
-		                 close_in file_ch;
-	                 with Sys_error s -> raise (ClientSideError s));
-	                (try close_in ic with _ -> ()); (* Nb. Unix.close_connection only requires the in_channel *)
-                  marshal ofd (Response OK)
+	              Pervasiveext.finally
+		              (fun () ->
+			              copy_with_heartbeat file_ch oc heartbeat_fun;
+			              marshal ofd (Response OK))
+		              (fun () ->
+			              (try close_in ic with _ -> ());
+			              (try close_in file_ch with _ -> ()))
               | 302 ->
 	                let newloc = List.assoc "location" headers in
 	                (try close_in ic with _ -> ()); (* Nb. Unix.close_connection only requires the in_channel *)
@@ -545,12 +546,13 @@ let main_loop ifd ofd =
 			                with e -> raise (ClientSideError (Printexc.to_string e))
 	                in
 	                while input_line ic <> "\r" do () done;
-	                (try
-		                 copy_with_heartbeat ic file_ch heartbeat_fun;
-		                 close_out file_ch
-	                 with Sys_error s -> raise (ClientSideError s));
-	                (try close_in ic with _ -> ()); (* Nb. Unix.close_connection only requires the in_channel *)
-	                marshal ofd (Response OK)
+	                Pervasiveext.finally
+		                (fun ()  ->
+			                copy_with_heartbeat ic file_ch heartbeat_fun;
+			                marshal ofd (Response OK))
+		                (fun () ->
+			                (try close_in ic with _ -> ());
+			                (try close_out file_ch with _ -> ()))
               | 302 ->
                   let headers = read_rest_of_headers ic in
                   let newloc = List.assoc "location" headers in
--- xen-api-1.3.2.orig/ocaml/database/db_filter.ml
+++ xen-api-1.3.2/ocaml/database/db_filter.ml
@@ -98,8 +98,14 @@ let eval_expr (lookup_val: _val -> strin
     | Or (a, b) -> f a || (f b)
   in f
 
+exception Expression_error of (string * exn)
+
 (* A simple parser for the expression language: *)
-let expr_of_string x = Db_filter_parse.exprstr Db_filter_lex.lexer (Lexing.from_string x)
+let expr_of_string x = try 
+	 Db_filter_parse.exprstr Db_filter_lex.lexer
+	   (Lexing.from_string x)
+  with e -> raise (Expression_error (x, e))
+
 
 
 
